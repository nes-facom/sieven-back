version: "3.7"

services:
    dev:
        build:
            context: ./
            dockerfile: Dockerfile.dev
        container_name: sieven-backend-dev
        restart: unless-stopped
        ports:
            - 8080:80
        volumes:
            - .:/var/www/html
        env_file:
            - .env
        networks:
            - sieven-network
        depends_on:
            - pgsql

    app:
        image: "sieven/backend:${TAG:-latest}"
        build:
            context: ./
            dockerfile: Dockerfile
        container_name: sieven-backend
        restart: unless-stopped
        ports:
            - ${SERVER_PORT:-80}:80
        environment:
            APP_ENV: local
            APP_DEBUG: true
        env_file:
            - .env
        networks:
            - sieven-network
        depends_on:
            - pgsql

    pgsql:
        image: postgres:9.6
        container_name: test-pgsql
        restart: unless-stopped
        expose:
            - 5432
        ports:
            - ${DB_PORT:-5432}:5432
        volumes:
            - dbpgsql:/docker-entrypoint-initdb.d/
        environment:
            POSTGRES_USER: ${DB_USERNAME:-postgres}
            POSTGRES_PASSWORD: ${DB_PASSWORD:-cafecomleite}
            POSTGRES_DB: ${DB_DATABASE:-sieven}
        networks:
            - sieven-network

    adminer:
        image: adminer
        restart: always
        ports:
            - ${ADMINER_PORT_DB:-8181}:8080
        environment:
            - ADMINER_DEFAULT_SERVER=pgsql
            - ADMINER_DESIGN=price
        networks:
            - sieven-network

    mailhog:
        image: mailhog/mailhog
        logging:
            driver: "none"
        ports:
            - ${MAIL_PORT:-1025}:1025
            - ${MAILHOG_PORT:-8025}:8025
        networks:
            - sieven-network

networks:
    sieven-network:
        driver: bridge

volumes:
    dbpgsql:
